#! /usr/bin/env zsh

{{ template "printers.zsh" }}

_print_running_script "$0"

set +euo pipefail


echo
if [ -x /usr/local/bin/pkgx ]; then
  _print_updating "pkgx"
else
  _print_installing "pkgx"
fi
curl -fsS https://pkgx.sh | sh
pkgx --sync

if ! command -v pkgx &> /dev/null; then
  _print_error "pkgx not installed"
  exit 1
fi

# run shellcode if not integrated
if [[ "$(command -v pkgx)" != "pkgx" ]]; then
  source <(pkgx --shellcode)
fi

# pkgx installs
if [ ! -x "$HOME/.local/bin/java" ];then
  _print_prog pkgx "installing openjdk.org@latest"
  pkgx install openjdk.org@latest
fi
if [ ! -x "$HOME/.local/bin/go" ];then
  _print_prog pkgx "installing go.dev@latest"
  pkgx install go.dev@latest
fi

if [ ! -x "$HOME/.local/bin/node" ];then
  _print_prog pkgx "installing nodejs.org@latest"
  pkgx install nodejs.org@latest
  pkgx node -v
fi
if [ ! -x "$HOME/.local/bin/npm" ]; then
  _print_prog pkgx "installing npmjs.com@latest"
  pkgx install npmjs.com@latest
fi

if [ ! -x "$HOME/.local/bin/ruby" ]; then
  _print_prog pkgx "installing ruby-lang.org@latest"
  pkgx install ruby-lang.org@latest
  pkgx ruby -v
fi
if [ ! -x "$HOME/.local/bin/gem" ]; then
  _print_prog pkgx "installing rubygems.org@latest"
  pkgx install rubygems.org@latest
  _print_prog pkgx "installing bundler"
  pkgx gem install bundler
fi

# fix pkgx ruby linking issue
if [ ! -L /opt/ruby-lang.org ]; then
  echo
  _print_symlinking "$HOME/.pkgx/ruby-lang.org" "/opt/ruby-lang.org"
  sudo -p "Password for %p:" ln -s "$HOME/.pkgx/ruby-lang.org" /opt/ruby-lang.org
fi

echo
_print_ok
