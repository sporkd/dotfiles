{{- $homebrew_prefix := "" -}}

export SHELL="/bin/zsh"
export EDITOR="{{ .editor }}"
export VISUAL="{{ .visual }} --wait"
export GIT_EDITOR="{{ .editor }}"

HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

setopt APPEND_HISTORY
setopt SHARE_HISTORY
# setopt EXTENDED_HISTORY # Not needed with SHARE_HISTORY
# setopt INC_APPEND_HISTORY # Not needed with SHARE_HISTORY
setopt HIST_IGNORE_DUPS
# setopt HIST_IGNORE_ALL_DUPS
setopt HIST_REDUCE_BLANKS
setopt HIST_VERIFY

setopt NO_LIST_BEEP
setopt CORRECT
setopt IGNORE_EOF
# setopt COMPLETE_IN_WORD

{{ if eq .chezmoi.os "darwin" }}

  # homebrew
  {{- if eq .chezmoi.arch "x86_64" -}}
  {{-   $homebrew_prefix = "/usr/local" -}}
  {{- else -}}
  {{-   $homebrew_prefix = "/opt/homebrew" -}}
  {{- end }}

  if [ -x "{{ $homebrew_prefix }}/bin/brew" ]; then
    eval "$({{ $homebrew_prefix }}/bin/brew shellenv)"
  fi

  # fish(y)
  source $HOMEBREW_PREFIX/share/zsh-autosuggestions/zsh-autosuggestions.zsh
  source $HOMEBREW_PREFIX/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
  source $HOMEBREW_PREFIX/share/zsh-history-substring-search/zsh-history-substring-search.zsh
  bindkey '^[[A' history-substring-search-up
  bindkey '^[[B' history-substring-search-down

  # navigation
  source $HOMEBREW_PREFIX/etc/profile.d/z.sh

  # xcode
  export SDKROOT="$(xcrun --show-sdk-path)"

{{ else if eq .chezmoi.os "linux" }}

{{ end }}

# java
export JAVA_HOME="$HOME/.local"

# postgresql
# requires `brew link postgresql@VERSION`
# if [ -d "$HOMEBREW_PREFIX/opt/libpq/bin" ]; then
#   export PATH="$HOMEBREW_PREFIX/opt/libpq/bin:$PATH"
# fi

{{ if eq .use_flutter "true" }}
# android
if [ -x "$HOMEBREW_PREFIX/share/android-ndk" ]; then
  export ANDROID_NDK_HOME="$HOMEBREW_PREFIX/share/android-ndk"
fi
if [ -d "$HOME/Library/Android/sdk/cmdline-tools/latest/bin" ]; then
  export PATH="$HOME/Library/Android/sdk/cmdline-tools/latest/bin:$PATH"
fi
{{ end }}

# ruby
# export GEM_HOME="$HOME/.gem"
# export PATH="$HOME/.gem/bin:$PATH"

# node
# export NPM_CONFIG_PREFIX="$HOME/.node_modules"
# export PATH="$HOME/.node_modules/bin:$PATH"

# pkgx shell integration
# https://docs.pkgx.sh/using-pkgx/shell-integration
if command -v pkgx &> /dev/null; then
  source <(pkgx --shellcode)
fi

export PATH="/usr/local/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/bin:$PATH"

# asdf
if [ -f "$HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh" ]; then
  source $HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh
fi

# fzf
source $HOME/.config/fzf/key-bindings.zsh
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!doc/*"'

# ripgrep
export RIPGREP_CONFIG_PATH="$HOME/.config/ripgrep/ripgreprc"

eval "$(zoxide init zsh)"
eval "$(starship init zsh)"

# use nvim for man
export MANPAGER="nvim +Man!"

# neovim
alias vi=nvim
alias vim=nvim
alias tree='et'

# ls
alias la="lsd -la"
alias ll="lsd -1"
alias ls="lsd -1"

# ranger
alias ranger="VISUAL=$EDITOR ranger"

# general
alias files='pkgx xplr'
alias icat='kitty +kitten icat'
alias recent='pkgx exa --header -la --sort oldest | head -n 25'
alias uuid="uuidgen | tr -d '\\n' | tr '[:upper:]' '[:lower:]' | pbcopy; pbpaste; echo"
alias weather='curl wttr.in'

# password
alias passgen='dd if=/dev/urandom bs=1 count=32 2>/dev/null | base64 | rev | cut -b 2- | rev'
